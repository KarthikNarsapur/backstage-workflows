name: ec2-create.yml
 
on:

  workflow_dispatch:

    inputs:


      instance_name:

        description: 'EC2 Instance Name'

        required: false

      instance_type:

        description: 'EC2 Instance Type'

        required: false

      security_group:

        description: 'Security Group Name for the instance'

        required: false

      allowed_ports:

        description: 'List of allowed inbound ports (comma separated)'

        required: false

      enable_public_ip:

        description: 'Enable Public IP'

        required: false

      region:

        description: 'AWS region'

        required: true

 
 
permissions:

  id-token: write

  contents: read
 
jobs:

  terraform_apply:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout code

      uses: actions/checkout@v2
 
    - name: Assume AWS Role using OIDC

      uses: aws-actions/configure-aws-credentials@v1.7.0

      with:

        role-to-assume: arn:aws:iam::730335384723:role/backstage_interns_project

        role-session-name: GitHub_to_AWS_via_FederatedOIDC

        aws-region: ${{ github.event.inputs.region }}
 
    - name: Setup Terraform

      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      working-directory: ./terraform/ec2/create_ec2
      run: terraform init
 
    - name: Terraform Format
      working-directory: ./terraform/ec2/create_ec2
      run: terraform fmt
 
    - name: Terraform Validate
      working-directory: ./terraform/ec2/create_ec2
      run: terraform validate
 
    - name: Terraform Apply
      working-directory: ./terraform/ec2/create_ec2
      run: terraform apply -var instance_name=${{ github.event.inputs.instance_name }} -var region=${{ github.event.inputs.region }} -var instance_type=${{ github.event.inputs.instance_type }} -var security_group=${{ github.event.inputs.security_group }} -var allowed_ports=${{ github.event.inputs.allowed_ports }} -var enable_public_ip=${{ github.event.inputs.enable_public_ip }} -auto-approve

    - name: Export Terraform Outputs
      working-directory: ./terraform/ec2/create_ec2
      run: terraform output -json > tf_output.json

    - name: Parse Terraform Outputs
      working-directory: ./terraform/ec2/create_ec2
      id: extract
      run: |
        id=$(jq -r .instance_id.value tf_output.json)
        ip=$(jq -r .public_ip.value tf_output.json)
        echo "instance_id=$id" >> $GITHUB_OUTPUT
        echo "public_ip=$ip" >> $GITHUB_OUTPUT
     
